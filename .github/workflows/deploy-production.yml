name: 'Terraform Plan/Apply Production'

on:
  push:
    branches:
    - production/*

#These environment variables are used by the terraform azure provider to setup OIDD authenticate.
env:
  ARM_CLIENT_ID: ${{ secrets.CLIENT_ID_PRODUCTION }}
  ARM_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET_PRODUCTION }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.TENANT_ID }}
  ARM_ACCESS_KEY: ${{ secrets.AZURE_STORAGE_ACCOUNT_KEY_PRODUCTION }}
  #PRODUCTION_BRANCH: ${{ format('refs/heads/production/{0}', 'hoge') }}
  #IS_PRODUCTION_BRANCH: ${{ github.ref == env.PRODUCTION_BRANCH || github.base_ref == PRODUCTION_BRANCH }}

permissions:
  id-token: write
  contents: read

jobs:
  check:
    runs-on: ubuntu-latest
    #if: ${{ env.IS_PRODUCTION_BRANCH != true }}
    if: ${{ github.ref != format('refs/heads/production/{0}', 'hoge') && github.base_ref != format('refs/heads/production/{0}', 'hoge') }}
    steps:
    - name: Unknown Branch
      run: exit 1

  terraform-deploy:
    runs-on: ubuntu-latest
    environment: production
    if: ${{ github.ref == format('refs/heads/production/{0}', 'hoge') || github.base_ref == format('refs/heads/production/{0}', 'hoge') }}
    steps:
      # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    - name: Deploy
      uses: ./.github/actions/deploy
      with:
        ENVIRONMENT: production
        TERRAFORM_VERSION: ${{ vars.TERRAFORM_VERSION }}
        K8S_VERSION: ${{ vars.K8S_VERSION }}
        CLIENT_ID: ${{ secrets.CLIENT_ID_PRODUCTION }}
        BACKEND_RESOURCE_GROUP_NAME: ${{ vars.BACKEND_RESOURCE_GROUP_NAME }}
        BACKEND_STORAGE_ACCOUNT_NAME: ${{ vars.BACKEND_STORAGE_ACCOUNT_NAME }}
        BACKEND_CONTAINER_NAME: ${{ vars.BACKEND_CONTAINER_NAME }}
        BACKEND_KEY: ${{ vars.BACKEND_KEY }}
        RESOURCE_GROUP_NAME: ${{ vars.RESOURCE_GROUP_NAME }}
        LOCATION: ${{ vars.LOCATION }}
        TENANT_ID: ${{ secrets.TENANT_ID }}
        SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
        BACKEND_PRINCIPAL_ID: ${{ secrets.BACKEND_PRINCIPAL_ID }}
        BASE_PRINCIPAL_ID: ${{ secrets.BASE_PRINCIPAL_ID }}
        PRODUCT_PRINCIPAL_ID: ${{ secrets.PRODUCT_PRINCIPAL_ID }}
        CONTAINER_PRINCIPAL_ID: ${{ secrets.CONTAINER_PRINCIPAL_ID }}
        STORAGE_ACCOUNT_NAME: ${{ vars.BACKEND_STORAGE_ACCOUNT_NAME }}
        CONTAINER_NAME: ${{ vars.BACKEND_CONTAINER_NAME }}